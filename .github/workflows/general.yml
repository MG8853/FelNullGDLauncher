name: Launcher Next CI

on:
  push:
    tags:
      - '1.0.8*'
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Use Node.js 13.9.0
        uses: actions/setup-node@v1
        with:
          node-version: '13.9.0'

      - name: Set node config to use python2.7
        run: npm config set python python2.7
      - name: install node tools
        if: matrix.os == 'windows-latest'
        run: npm install --global --production --vs2015 windows-build-tools@4.0.0
      - name: install node-gyp
        run: npm install --global node-gyp@latest
      - name: Set node config to set msvs_version to 2015
        if: matrix.os == 'windows-latest'
        run: npm config set msvs_version 2015
      - name: yarn install
        run: |
          yarn
      - name: yarn lint
        run: |
          yarn lint
          
      
      ##CreateAPP - yarn release
      - name: yarn release for windows
        if: matrix.os == 'windows-latest' && github.event_name == 'push'
        env:
          CI: ''
          TRAVIS_TAG: ''
          APPVEYOR_REPO_TAG_NAME: ''
          CIRCLE_TAG: ''
          BITRISE_GIT_TAG: ''
          CI_BUILD_TAG: ''
          RELEASE_TESTING: true
        run: |
          yarn release-win -o --watch
      - name: yarn release for mac and linux
        if: matrix.os != 'windows-latest' || github.event_name != 'push'
        env:
          CI: ''
          TRAVIS_TAG: ''
          APPVEYOR_REPO_TAG_NAME: ''
          CIRCLE_TAG: ''
          BITRISE_GIT_TAG: ''
          CI_BUILD_TAG: ''
          RELEASE_TESTING: true
        run: |
          yarn release -o --watch
      - name: upload release to gh releases
        if: github.event_name == 'push' && github.ref == 'refs/heads/releases'
        env:
          GH_ACCESS_TOKEN_RELEASES: ${{ secrets.GH_ACCESS_TOKEN_RELEASES }}
        run: |
          yarn upload


     ##ActionRelease - zip
      - uses: actions/upload-artifact@v1
        if: matrix.os == 'macos-latest'
        with:
          name: MacOs Release
          path: deploy

      - uses: actions/upload-artifact@v1
        if: matrix.os == 'windows-latest'
        with:
          name: Windows Release
          path: deploy

      - uses: actions/upload-artifact@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          name: Linux Release
          path: deploy
 
 
      ##ReleaseChannel - go!
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: FelNullLauncher - version.${{ github.ref }}
          body: |
            felnullgdlauncher-${{ github.event_name	 }}-x64.nsis.7z is network installer data. Do not download!
            felnullgdlauncher-${{ github.event_name	 }}-x64.nsis.7zはネットワークインストーラーのデータです。ダウンロードしないでください！

            Linux : どれでもできればよし！
            Mac OS X : [FelNullGDLauncher-mac-setup.dmg]を実行してアプリをアプリケーションにコピーしてください。
            Windows : [FelNullGDLauncher-win-setup.exe]を実行すると自動的にインストールが開始し、ソフトが起動します。

            ※データフォルダリンク例
            Linuxわからん

            Mac OS X
            /Users/ [user] /Library/Application Support/felnullgdlaucher
            /Users/ [user] /Library/Application Support/felnullgdlaucher_next

            Windows
            C:\Users\ [user] \AppData\Roaming\felnullgdlauncher
            C:\Users\ [user] \AppData\Roaming\felnullgdlauncher_next
            
            Build by ${{ github.actor }}
          draft: false
          prerelease: false
      

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          file: "deploy"






      - uses: actions/setup-ruby@v1
      - name: Send Webhook Notification
        if: matrix.os == 'macos-latest'
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          git clone https://github.com/gorilla-devs/github-actions-discord-webhook.git webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
